before:
  hooks:
  - go mod tidy

builds:
- env:
  - CGO_ENABLED=0
  goos:
  - linux
  - darwin
  goarch:
  - amd64
  - arm64
  ignore:
  # We don't want to publish a linux-arm64 binary
  - goos: linux
    goarch: arm64
  ldflags:
  - -X github.com/bitrise-io/bitrise-plugins-step/version.VERSION={{ .Version }}

archives:
# GitHub release should contain the raw binaries (no zip or tar.gz)
- format: binary
  # Name format should match the URLs in bitrise-plugins.yml
  name_template: >-
    {{ .ProjectName }}-
    {{- title .Os }}-
    {{- if eq .Arch "amd64" }}x86_64
    {{- else }}{{ .Arch }}{{ end }}

release:
  github:
    owner: bitrise-io
    name: bitrise-plugins-step
  draft: true
  mode: replace
  footer: |
    ### Install or upgrade
    To install this version, run the following command (in a bash shell):
    
      ```bash
      curl -fL https://github.com/bitrise-io/{{ .ProjectName }}/releases/download/{{ .Tag }}/{{ .ProjectName }}-"$(uname -s)"-"$(uname -m)" > /usr/local/bin/{{ .ProjectName }}
      ```
    ℹ️ Apple Silicon: Please note by default `/usr/local/bin` does not exist on machines and isn't encouraged by the community over `/opt/bin`. Use a custom folder path or use your own `bin` folder path. i.e `/opt/bin`
    
    Then:
    
      ```
      chmod +x /usr/local/bin/{{ .ProjectName }}
      ```
    
      That's all, you're ready to call `{{ .ProjectName }}`!
checksum:
  name_template: 'checksums.txt'
snapshot:
  # Run `goreleaser release --snapshot` locally to create binaries without publishing and checks
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
